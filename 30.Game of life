class Solution:
    def gameOfLife(self, board: List[List[int]]) -> None:
        rows, cols = len(board), len(board[0])
        
        def countNeighbours(r, c):
            nei = 0
            for i in range(r-1, r+2):
                for j in range(c-1, c+2):
                    if (i == r and j == c) or i < 0 or j < 0 or i >= rows or j >= cols:
                        continue
                    if board[i][j] in [1, 3]:
                        nei += 1
            return nei
        
        # Step 1: Mark the cells for the next state without changing the current state
        for r in range(rows):
            for c in range(cols):
                nei = countNeighbours(r, c)
                if board[r][c] == 1:  # Live cell
                    if nei in [2, 3]:
                        board[r][c] = 3  # Mark as live in the next state
                else:  # Dead cell
                    if nei == 3:
                        board[r][c] = 2  # Mark as live in the next state
        
        # Step 2: Update the board to the next state
        for r in range(rows):
            for c in range(cols):
                if board[r][c] == 1:
                    board[r][c] = 0  # Dead cell in the next state
                elif board[r][c] in [2, 3]:
                    board[r][c] = 1  # Live cell in the next state
